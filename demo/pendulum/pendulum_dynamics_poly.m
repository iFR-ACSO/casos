function taylor_expansion = pendulum_dynamics_poly(in1)
%PENDULUM_DYNAMICS_POLY
%    TAYLOR_EXPANSION = PENDULUM_DYNAMICS_POLY(IN1)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    31-Jul-2024 16:25:48

dtheta1 = in1(4,:);
dtheta2 = in1(5,:);
dtheta3 = in1(6,:);
theta1 = in1(1,:);
theta2 = in1(2,:);
theta3 = in1(3,:);
et1 = dtheta1.*(-6.799231025231971e+1)-dtheta2.*2.742163672774276e+1-dtheta3.*9.607977054003804-theta1.*2.167423728799276e+2;
et2 = theta2.*(-1.814044075016427e+1)-theta3.*1.05865573902707e+1;
et3 = dtheta1.*1.33019996689415e+2+dtheta2.*5.249685041871592e+1+dtheta3.*2.275276430520114e+1;
et4 = theta1.*4.546946805026489e+2+theta2.*1.977241703396889e+1+theta3.*3.148796901442806e+1;
et5 = dtheta1.*(-8.167755183627082e+1)-dtheta2.*2.948863614743854e+1-dtheta3.*2.340905669226816e+1;
et6 = theta1.*(-3.032987067688514e+2)+theta2.*2.53608146164643e+1-theta3.*4.504673935861641e+1;
taylor_expansion = [dtheta1;dtheta2;dtheta3;et1+et2;et3+et4;et5+et6];
end
